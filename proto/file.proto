syntax = "proto3";

package lobby;

import "buf/validate/validate.proto";

option go_package = "go-connect/gen;lobbypb";

// Player info
message PlayerInfo {
  string player_id = 1 [(buf.validate.field).string.min_len = 1];
  string player_name = 2 [(buf.validate.field).string.min_len = 1];
  bool is_host = 3;
}

message PingRequest {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
  string player_id = 2 [(buf.validate.field).string.min_len = 1];
  int64 client_time_unix_millis = 3;
}

message PingResponse {
  string player_id = 1;
  int64 ServerTimeUnixMillis = 2;
}

// Create room
message CreateRoomRequest {
  string player_id = 1 [(buf.validate.field).string.min_len = 1];
  string player_name = 2 [(buf.validate.field).string.min_len = 1];
}

message CreateRoomResponse {
  string room_id = 1;
  bool success = 2;
  string message = 3;
}

// Join room
message JoinRoomRequest {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
  string player_id = 2 [(buf.validate.field).string.min_len = 1];
  string player_name = 3 [(buf.validate.field).string.min_len = 1];
}

message JoinRoomResponse {
  bool success = 1;
  string message = 2;
}

// Leave room
message LeaveRoomRequest {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
  string player_id = 2 [(buf.validate.field).string.min_len = 1];
}

message LeaveRoomResponse {
  bool success = 1;
  string message = 2;
}

// List members
message ListMembersRequest {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
}

message ListMembersResponse {
  repeated PlayerInfo players = 1;
}

// Player sent message
message PlayerSentMessageRequest {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
  string player_id = 2 [(buf.validate.field).string.min_len = 1];
  string message = 3 [(buf.validate.field).string.min_len = 1];
}
message PlayerSentMessageResponse {
  bool success = 1;
  string message = 2;
}

// Broadcast events
message PlayerJoinedBroadcast {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
  PlayerInfo player = 2;
  int64 timestamp = 3;
}

message PlayerLeftBroadcast {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
  PlayerInfo player = 2;
  int64 timestamp = 3;
}

message ChatMessageBroadcast  {
  string room_id = 1    [(buf.validate.field).string.min_len = 1];
  PlayerInfo player = 2;
  string message = 3    [(buf.validate.field).string.min_len = 1];
  int64 timestamp = 4;
}

message RoomEventRequest {
  string room_id = 1 [(buf.validate.field).string.min_len = 1];
}

message PingBroadcast {
  string room_id = 1;
  string player_id = 2;
  int64 latency_ms = 3;
  int64 server_time_unix_millis = 4;
}

message RoomEvent {
  oneof event {
    PlayerJoinedBroadcast player_joined = 1;
    PlayerLeftBroadcast player_left = 2;
    ChatMessageBroadcast  chat_message_broadcast = 3;
    PingBroadcast ping_broadcast = 99;
  }
}

// Service for room management
service RoomService {
  rpc Ping(PingRequest) returns (PingResponse);
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
  rpc JoinRoom(JoinRoomRequest) returns (JoinRoomResponse);
  rpc LeaveRoom(LeaveRoomRequest) returns (LeaveRoomResponse);
  rpc ListMembers(ListMembersRequest) returns (ListMembersResponse);
  rpc SendMessage(PlayerSentMessageRequest) returns (PlayerSentMessageResponse);
}

// Service for streaming room events
service RoomBroadcast {
  rpc StreamRoomEvents(RoomEventRequest) returns (stream RoomEvent);
}
